<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>https://cdn.rawgit.com/martinring/tmlanguage/master/tmlanguage.json</string>
    <key>name</key>
    <string>touist</string>
    <key>scopeName</key>
    <string>source.touist</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>name</key>
        <string>meta.big-operators</string>
        <key>begin</key>
        <string>\b(bigand|bigor)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(end)\s+</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#variable-list</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.big-operators.variable-values</string>
            <key>begin</key>
            <string>(in)\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.big-operators.in-symbol.touist</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?:(?=when)|(?&lt;!when)(:)\s*)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.big-operator.begin-body.touist</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#any-list</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.big-operators.when-statement</string>
            <key>begin</key>
            <string>(when)\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.big-operator.when.touist</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(:)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.big-operator.begin-body.touist</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>source.touist</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>source.touist</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.let-construct.variable-list</string>
        <key>begin</key>
        <string>(let)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;==)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#variable-list</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.let-construct.content-list</string>
        <key>begin</key>
        <string>(?&gt;=let.*)(=)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(:)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#any-list</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.qbf</string>
        <key>begin</key>
        <string>(exists|forall)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.qbf-exists.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(:)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#any-list</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.let-construct.content-list</string>
        <key>begin</key>
        <string>(?&gt;=let.*)(=)\s+</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(:)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.touist</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#any-list</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.function-unary</string>
        <key>begin</key>
        <string>(abs|powerset|int|card|empty|sqrt)(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.unary.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>source.touist</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.function-binary</string>
        <key>begin</key>
        <string>(union|inter|subset|diff|exact|atmost|atleast)(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.binary.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#any-list</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.if-then-else.touist</string>
        <key>begin</key>
        <string>(?=if)</string>
        <key>end</key>
        <string>(end)\s+</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.if-then-else.end-keyword.touist</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.if-then-else.condition-statement.touist</string>
            <key>begin</key>
            <string>(if)\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.if-then-else.if-keyword.touist</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=then)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.if-then-else.then-statement.touist</string>
            <key>begin</key>
            <string>(then)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.if-then-else.then-keyword.touist</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=else)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.if-then-else.else-statement.touist</string>
            <key>begin</key>
            <string>(else)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.if-then-else.else-keyword.touist</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=end)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <dict>
        <key>include</key>
        <string>#keywords</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#variable-tuple</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#variable</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#operator</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#numbers</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#term-tuple</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#term</string>
      </dict>
      <dict>
        <key>name</key>
        <string>meta.parenthesis</string>
        <key>begin</key>
        <string>(\()</string>
        <key>end</key>
        <string>(\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>source.touist</string>
          </dict>
        </array>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.data-model-separator.touist</string>
            <key>match</key>
            <string>\b(data)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.function.infix.touist</string>
            <key>match</key>
            <string>\b(mod|in|for)\b</string>
          </dict>
        </array>
      </dict>
      <key>operator</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.touist</string>
            <key>match</key>
            <string>(and|or|xor|=&gt;|&lt;=&gt;|not|&lt;=|&lt;|&gt;|==|=|\+|-|\*|\/)</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line</string>
            <key>match</key>
            <string>;;.*</string>
          </dict>
          <dict>
            <key>name</key>
            <string>comment</string>
            <key>match</key>
            <string>\\\\</string>
          </dict>
        </array>
      </dict>
      <key>numbers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.touist</string>
            <key>match</key>
            <string>[0-9]+(\.[0-9]+)?</string>
          </dict>
        </array>
      </dict>
      <key>term</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.unquoted.term.touist</string>
            <key>match</key>
            <string>[a-zA-Z][a-zA-Z_0-9]*</string>
          </dict>
        </array>
      </dict>
      <key>term-tuple</key>
      <dict>
        <key>begin</key>
        <string>([a-zA-Z][a-zA-Z_0-9]*)(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.touist</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.touist</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#any-list</string>
          </dict>
        </array>
      </dict>
      <key>variable-tuple</key>
      <dict>
        <key>begin</key>
        <string>(\$)([a-zA-Z][a-zA-Z_0-9]*)(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.other.touist</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.touist</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.touist</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.touist</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#any-list</string>
          </dict>
        </array>
      </dict>
      <key>variable</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>variable.other.touist</string>
            <key>match</key>
            <string>\$[a-zA-Z0-9_]+</string>
          </dict>
        </array>
      </dict>
      <key>variable-list</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#variable</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.separator.variable-list.touist</string>
            <key>match</key>
            <string>,\s*</string>
          </dict>
        </array>
      </dict>
      <key>any-list</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.separator.any-list.touist</string>
            <key>match</key>
            <string>,\s*</string>
          </dict>
          <dict>
            <key>include</key>
            <string>source.touist</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>